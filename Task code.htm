<!DOCTYPE html>
<html lang="en">
	
<!-- the header contains information we will designate but only display on hover -->
<head>	
  	<title>html and JavaScript Assignment 1 Task</title>
  <!-- Initialize a global WBK function -->
	<script src="https://cdn.rawgit.com/maxlath/wikidata-sdk/dist/dist/wikibase-sdk.min.js"></script>
<!-- Initialize a global wdk object using the WBK object -->
	<script src="https://cdn.rawgit.com/maxlath/wikidata-sdk/dist/dist/wikidata-sdk.min.js"></script>
  <!-- This is a library of wikidata software development kit -->
  <!-- We have discussed the best placing of this line - 'best practice' -->
</head>

<!-- the next section called "body" is what we do get to see in the browser window -->
<body>
  <pre id="output"></pre> <!-- This defines a preformatted way of displaying text -->
	
<!-- This is the beginning of a JavaScript section -->
<!-- Task : find the top 10 or so genes in Mus musculus taxon (chosen to replace E coli in original question)-->
<!-- which code for the most proteins. Choose top 14 genes which code for >= 5 proteins each, beyond that 4 proteins or fewer -->
<!-- with many genes coding for 4 proteins  -->  
  <script> 
	  //The following query in SPARQL query language to WikiData;
	  //proteins encoded by (P702) genes (instance of (P31) gene (Q7187)) found in taxon (P703) Mus musculus (Q83310)
	  //in English count proteins encoded by Mus musculus genes. 
	  //Limit to 14 highest counts.
	  
    query = `SELECT ?gene ?geneLabel ?count WITH {
               SELECT ?gene (COUNT(DISTINCT ?protein) AS ?count) WHERE{
                 ?protein wdt:P702 ?gene . ?gene wdt:P31 wd:Q7187 ;    
                        wdt:P703 wd:Q83310 . 
               } GROUP BY ?gene ORDER BY DESC(?count) LIMIT 14
             } AS %RESULTS WHERE {
               INCLUDE %RESULTS
               SERVICE wikibase:label { bd:serviceParam wikibase:language '[AUTO_LANGUAGE],en'. }
             }
            `
	
    fetch(
      wdk.sparqlQuery(query)  // "sparqlQuery" is a named function in js, "then" is used in 3 different ways hereafter;
    ).then( response => response.json() // designate a JSON object for the query result;
    ).then( wdk.simplify.sparqlResults
    ).then(
      function (response) {
       
          /* JSON.stringify(response, undefined, 2); // turns the object into a string. Note: opposite direction known as "parse";*/
      
	    html = "<table>";
	      html += "<tr><td> Gene </td><td> Count </td></tr>"; 
	    for(var i = 0; i < response.length; i ++) {
	    	html += "<tr>";
	    	html += "<td>";
	    	dataJSON = JSON.stringify(response[i].label);
		    html += dataJSON;
		    html += "</td>";
		html += "<td>";
	    	dataJSON = JSON.stringify(response[i].count);
		    html += dataJSON;
		    html += "</td>";
	    	html += "</tr>";
    	    }
	  html += "</table>";
	      document.getElementById('output').innerHTML = html;
      }		
    )
  </script> 
	<!-- This is the end of a JavaScript section -->
	
</body>

</html>
